{"version":3,"file":"static/js/891.e82fdef7.chunk.js","mappings":"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","sources":["components/admin/ConversationModal.jsx"],"sourcesContent":["// src/components/admin/ConversationModal.jsx\nimport React, { useEffect, useState } from \"react\";\nimport {\n  Dialog, DialogTitle, DialogContent, DialogActions,\n  Button, Grid, TextField, IconButton, Divider, Snackbar, Box,\n} from \"@mui/material\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { useUnitEdit } from \"../../pages/admin/UnitEditProvider\";\n\nexport default function ConversationModal({ open, onClose }) {\n  const { conversation, setConversation, savePartFromState, savePartWithJSON, buildPartFromState } = useUnitEdit();\n  const [jsonStr, setJsonStr] = useState(\"[]\");\n  const [snack, setSnack] = useState(\"\");\n\n  useEffect(() => {\n    if (open) setJsonStr(JSON.stringify(buildPartFromState(\"conversation\"), null, 2));\n  }, [open, buildPartFromState]);\n\n  const add = () => setConversation([ ...conversation, { speaker: \"A\", chinese: \"\", pinyin: \"\", pronunciation: \"\", meaning: \"\" } ]);\n  const update = (i, field, v) => { const next = [...conversation]; next[i][field] = v; setConversation(next); };\n  const del = (i) => setConversation(conversation.filter((_, idx) => idx !== i));\n\n  const saveCurrent = async () => {\n    try { await savePartFromState(\"conversation\"); setSnack(\"대화 저장 완료\"); }\n    catch (e) { console.error(e); setSnack(\"대화 저장 실패\"); }\n  };\n  const saveJSONPart = async () => {\n    try {\n      const parsed = JSON.parse(jsonStr);\n      await savePartWithJSON(\"conversation\", parsed);\n      setConversation(parsed);\n      setSnack(\"대화(JSON) 저장 완료\");\n    } catch (e) { console.error(e); setSnack(\"JSON 파싱/저장 실패\"); }\n  };\n\n  return (\n    <Dialog open={open} onClose={onClose} maxWidth=\"lg\" fullWidth>\n      <DialogTitle>대화 관리</DialogTitle>\n      <DialogContent dividers>\n        {conversation.map((c, i) => (\n          <Grid container spacing={1} key={i} sx={{ mb: 1 }}>\n            <Grid item xs={1}><TextField label=\"화자\" value={c.speaker || \"\"} onChange={(e) => update(i, \"speaker\", e.target.value)} fullWidth /></Grid>\n            {[\"chinese\", \"pinyin\", \"pronunciation\", \"meaning\"].map((f) => (\n              <Grid item xs={2.75} key={f}><TextField label={f} value={c[f] || \"\"} onChange={(e) => update(i, f, e.target.value)} fullWidth /></Grid>\n            ))}\n            <Grid item xs={0.5}><IconButton onClick={() => del(i)} color=\"error\"><DeleteIcon /></IconButton></Grid>\n          </Grid>\n        ))}\n        <Button onClick={add}>+ 대화 추가</Button>\n\n        <Divider sx={{ my: 2 }} />\n        <Button variant=\"contained\" onClick={saveCurrent}>현재 값으로 저장</Button>\n\n        <Divider sx={{ my: 2 }} />\n        <TextField\n          label=\"이 파트 JSON 편집 (conversation)\"\n          value={jsonStr}\n          onChange={(e) => setJsonStr(e.target.value)}\n          fullWidth multiline rows={12} sx={{ fontFamily: \"monospace\" }}\n        />\n        <Box sx={{ mt: 1 }}>\n          <Button variant=\"contained\" onClick={saveJSONPart}>JSON으로 저장</Button>\n        </Box>\n      </DialogContent>\n      <DialogActions><Button onClick={onClose}>닫기</Button></DialogActions>\n      <Snackbar open={!!snack} autoHideDuration={2200} onClose={() => setSnack(\"\")} message={snack} />\n    </Dialog>\n  );\n}\n"],"names":["ConversationModal","_ref","open","onClose","conversation","setConversation","savePartFromState","savePartWithJSON","buildPartFromState","useUnitEdit","jsonStr","setJsonStr","useState","snack","setSnack","useEffect","JSON","stringify","update","i","field","v","next","_jsxs","Dialog","maxWidth","fullWidth","children","_jsx","DialogTitle","DialogContent","dividers","map","c","Grid","container","spacing","sx","mb","item","xs","TextField","label","value","speaker","onChange","e","target","f","IconButton","onClick","filter","_","idx","del","color","DeleteIcon","Button","add","chinese","pinyin","pronunciation","meaning","Divider","my","variant","async","console","error","multiline","rows","fontFamily","Box","mt","parsed","parse","DialogActions","Snackbar","autoHideDuration","message"],"sourceRoot":""}