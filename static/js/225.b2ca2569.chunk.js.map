{"version":3,"file":"static/js/225.b2ca2569.chunk.js","mappings":"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","sources":["components/admin/PracticeModal.jsx"],"sourcesContent":["// src/components/admin/PracticeModal.jsx\nimport React, { useEffect, useState } from \"react\";\nimport {\n  Dialog, DialogTitle, DialogContent, DialogActions, Button,\n  Grid, TextField, IconButton, Divider, Typography, Snackbar, Box,\n} from \"@mui/material\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { useUnitEdit } from \"../../pages/admin/UnitEditProvider\";\n\nconst ensureObj = (p) =>\n  Array.isArray(p)\n    ? { reading: [], writing: [], reorder: [], extension_phrases: [], substitution: [] }\n    : p || { reading: [], writing: [], reorder: [], extension_phrases: [], substitution: [] };\n\nexport default function PracticeModal({ open, onClose }) {\n  const { practice, setPractice, savePartFromState, savePartWithJSON, buildPartFromState } = useUnitEdit();\n  const isNew = practice && !Array.isArray(practice);\n  const [jsonStr, setJsonStr] = useState(\"{}\");\n  const [snack, setSnack] = useState(\"\");\n\n  useEffect(() => {\n    if (open) {\n      const part = buildPartFromState(\"practice\");\n      // 이 모달은 substitution까지 포함된 practice 전체를 대상으로 저장\n      setJsonStr(JSON.stringify(part, null, 2));\n    }\n  }, [open, buildPartFromState]);\n\n  const saveCurrent = async () => {\n    try { await savePartFromState(\"practice\"); setSnack(\"연습(practice) 저장 완료\"); }\n    catch (e) { console.error(e); setSnack(\"연습 저장 실패\"); }\n  };\n  const saveJSONPart = async () => {\n    try {\n      const parsed = JSON.parse(jsonStr);\n      await savePartWithJSON(\"practice\", parsed);\n      setPractice(parsed);\n      setSnack(\"연습(JSON) 저장 완료\");\n    } catch (e) { console.error(e); setSnack(\"JSON 파싱/저장 실패\"); }\n  };\n\n  // Legacy array UI\n  if (!isNew) {\n    const addLegacy = () => setPractice([...(practice || []), { question: \"\", options: [], answer: \"\" }]);\n    const updLegacy = (i, field, v) => { const next = [...practice]; next[i][field] = field === \"options\" ? (v || \"\").split(\",\").map((s) => s.trim()) : v; setPractice(next); };\n    const delLegacy = (i) => setPractice(practice.filter((_, idx) => idx !== i));\n\n    return (\n      <Dialog open={open} onClose={onClose} maxWidth=\"lg\" fullWidth>\n        <DialogTitle>연습 문제 (레거시)</DialogTitle>\n        <DialogContent dividers>\n          {(practice || []).map((p, i) => (\n            <Grid container spacing={1} key={i} sx={{ mb: 1 }}>\n              <Grid item xs={12}><TextField label=\"문제\" value={p.question || \"\"} onChange={(e) => updLegacy(i, \"question\", e.target.value)} fullWidth /></Grid>\n              <Grid item xs={12}><TextField label=\"옵션(쉼표)\" value={(p.options || []).join(\",\")} onChange={(e) => updLegacy(i, \"options\", e.target.value)} fullWidth /></Grid>\n              <Grid item xs={12}><TextField label=\"정답\" value={p.answer || \"\"} onChange={(e) => updLegacy(i, \"answer\", e.target.value)} fullWidth /></Grid>\n              <Grid item xs={12}><IconButton onClick={() => delLegacy(i)} color=\"error\"><DeleteIcon /></IconButton></Grid>\n            </Grid>\n          ))}\n          <Button onClick={addLegacy}>+ 문제 추가</Button>\n\n          <Divider sx={{ my: 2 }} />\n          <Button variant=\"contained\" onClick={saveCurrent}>현재 값으로 저장</Button>\n\n          <Divider sx={{ my: 2 }} />\n          <TextField\n            label=\"이 파트 JSON 편집 (practice 전체)\"\n            value={jsonStr}\n            onChange={(e) => setJsonStr(e.target.value)}\n            fullWidth multiline rows={12} sx={{ fontFamily: \"monospace\" }}\n          />\n          <Box sx={{ mt: 1 }}>\n            <Button variant=\"contained\" onClick={saveJSONPart}>JSON으로 저장</Button>\n          </Box>\n        </DialogContent>\n        <DialogActions><Button onClick={onClose}>닫기</Button></DialogActions>\n        <Snackbar open={!!snack} autoHideDuration={2200} onClose={() => setSnack(\"\")} message={snack} />\n      </Dialog>\n    );\n  }\n\n  // New structure UI\n  const ensure = () => setPractice((p) => ensureObj(p));\n  const addReading = () => { ensure(); setPractice((p) => ({ ...p, reading: [...(p.reading || []), { zh: \"\", ko: \"\" }] })); };\n  const updReading = (i, f, v) => setPractice((p) => { const arr = [...(p.reading || [])]; arr[i][f] = v; return { ...p, reading: arr }; });\n  const delReading = (i) => setPractice((p) => ({ ...p, reading: (p.reading || []).filter((_, idx) => idx !== i) }));\n\n  const addWriting = () => { ensure(); setPractice((p) => ({ ...p, writing: [...(p.writing || []), { prompt_ko: \"\", answer_zh: \"\" }] })); };\n  const updWriting = (i, f, v) => setPractice((p) => { const arr = [...(p.writing || [])]; arr[i][f] = v; return { ...p, writing: arr }; });\n  const delWriting = (i) => setPractice((p) => ({ ...p, writing: (p.writing || []).filter((_, idx) => idx !== i) }));\n\n  const addReorder = () => { ensure(); setPractice((p) => ({ ...p, reorder: [...(p.reorder || []), { items: [], answer: \"\", hint_ko: \"\" }] })); };\n  const updReorder = (i, f, v) => setPractice((p) => { const arr = [...(p.reorder || [])]; arr[i][f] = f === \"items\" ? (v || \"\").split(\",\").map((s) => s.trim()) : v; return { ...p, reorder: arr }; });\n  const delReorder = (i) => setPractice((p) => ({ ...p, reorder: (p.reorder || []).filter((_, idx) => idx !== i) }));\n\n  const addExt = () => { ensure(); setPractice((p) => ({ ...p, extension_phrases: [...(p.extension_phrases || []), { zh: \"\", py: \"\", pron: \"\", ko: \"\" }] })); };\n  const updExt = (i, f, v) => setPractice((p) => { const arr = [...(p.extension_phrases || [])]; arr[i][f] = v; return { ...p, extension_phrases: arr }; });\n  const delExt = (i) => setPractice((p) => ({ ...p, extension_phrases: (p.extension_phrases || []).filter((_, idx) => idx !== i) }));\n\n  return (\n    <Dialog open={open} onClose={onClose} maxWidth=\"lg\" fullWidth>\n      <DialogTitle>연습 문제 & 확장 표현</DialogTitle>\n      <DialogContent dividers>\n        <Typography variant=\"subtitle1\">읽기</Typography>\n        {(practice.reading || []).map((r, i) => (\n          <Grid container spacing={1} key={`rd-${i}`} sx={{ mb: 1 }}>\n            <Grid item xs={6}><TextField label=\"zh\" value={r.zh || \"\"} onChange={(e) => updReading(i, \"zh\", e.target.value)} fullWidth /></Grid>\n            <Grid item xs={6}><TextField label=\"ko\" value={r.ko || \"\"} onChange={(e) => updReading(i, \"ko\", e.target.value)} fullWidth /></Grid>\n            <Grid item xs={12}><IconButton onClick={() => delReading(i)} color=\"error\"><DeleteIcon /></IconButton></Grid>\n          </Grid>\n        ))}\n        <Button onClick={addReading}>+ 읽기 추가</Button>\n\n        <Divider sx={{ my: 2 }} />\n        <Typography variant=\"subtitle1\">쓰기</Typography>\n        {(practice.writing || []).map((w, i) => (\n          <Grid container spacing={1} key={`wr-${i}`} sx={{ mb: 1 }}>\n            <Grid item xs={6}><TextField label=\"prompt_ko\" value={w.prompt_ko || \"\"} onChange={(e) => updWriting(i, \"prompt_ko\", e.target.value)} fullWidth /></Grid>\n            <Grid item xs={6}><TextField label=\"answer_zh\" value={w.answer_zh || \"\"} onChange={(e) => updWriting(i, \"answer_zh\", e.target.value)} fullWidth /></Grid>\n            <Grid item xs={12}><IconButton onClick={() => delWriting(i)} color=\"error\"><DeleteIcon /></IconButton></Grid>\n          </Grid>\n        ))}\n        <Button onClick={addWriting}>+ 쓰기 추가</Button>\n\n        <Divider sx={{ my: 2 }} />\n        <Typography variant=\"subtitle1\">배열</Typography>\n        {(practice.reorder || []).map((r, i) => (\n          <Grid container spacing={1} key={`re-${i}`} sx={{ mb: 1 }}>\n            <Grid item xs={5}><TextField label=\"items(쉼표)\" value={(r.items || []).join(\",\")} onChange={(e) => updReorder(i, \"items\", e.target.value)} fullWidth /></Grid>\n            <Grid item xs={5}><TextField label=\"answer\" value={r.answer || \"\"} onChange={(e) => updReorder(i, \"answer\", e.target.value)} fullWidth /></Grid>\n            <Grid item xs={2}><TextField label=\"hint_ko\" value={r.hint_ko || \"\"} onChange={(e) => updReorder(i, \"hint_ko\", e.target.value)} fullWidth /></Grid>\n            <Grid item xs={12}><IconButton onClick={() => delReorder(i)} color=\"error\"><DeleteIcon /></IconButton></Grid>\n          </Grid>\n        ))}\n        <Button onClick={addReorder}>+ 배열 추가</Button>\n\n        <Divider sx={{ my: 2 }} />\n        <Typography variant=\"subtitle1\">확장 표현</Typography>\n        {(practice.extension_phrases || []).map((e, i) => (\n          <Grid container spacing={1} key={`ex-${i}`} sx={{ mb: 1 }}>\n            <Grid item xs={3}><TextField label=\"zh\" value={e.zh || \"\"} onChange={(ev) => updExt(i, \"zh\", ev.target.value)} fullWidth /></Grid>\n            <Grid item xs={3}><TextField label=\"py\" value={e.py || \"\"} onChange={(ev) => updExt(i, \"py\", ev.target.value)} fullWidth /></Grid>\n            <Grid item xs={3}><TextField label=\"pron\" value={e.pron || \"\"} onChange={(ev) => updExt(i, \"pron\", ev.target.value)} fullWidth /></Grid>\n            <Grid item xs={3}><TextField label=\"ko\" value={e.ko || \"\"} onChange={(ev) => updExt(i, \"ko\", ev.target.value)} fullWidth /></Grid>\n            <Grid item xs={12}><IconButton onClick={() => delExt(i)} color=\"error\"><DeleteIcon /></IconButton></Grid>\n          </Grid>\n        ))}\n        <Button onClick={addExt}>+ 확장 표현 추가</Button>\n\n        <Divider sx={{ my: 2 }} />\n        <Button variant=\"contained\" onClick={saveCurrent}>현재 값으로 저장 (practice 전체)</Button>\n\n        <Divider sx={{ my: 2 }} />\n        <TextField\n          label=\"이 파트 JSON 편집 (practice 전체)\"\n          value={jsonStr}\n          onChange={(e) => setJsonStr(e.target.value)}\n          fullWidth multiline rows={12} sx={{ fontFamily: \"monospace\" }}\n        />\n        <Box sx={{ mt: 1 }}>\n          <Button variant=\"contained\" onClick={saveJSONPart}>JSON으로 저장</Button>\n        </Box>\n      </DialogContent>\n      <DialogActions><Button onClick={onClose}>닫기</Button></DialogActions>\n      <Snackbar open={!!snack} autoHideDuration={2200} onClose={() => setSnack(\"\")} message={snack} />\n    </Dialog>\n  );\n}\n"],"names":["ensureObj","p","Array","isArray","reading","writing","reorder","extension_phrases","substitution","PracticeModal","_ref","open","onClose","practice","setPractice","savePartFromState","savePartWithJSON","buildPartFromState","useUnitEdit","isNew","jsonStr","setJsonStr","useState","snack","setSnack","useEffect","part","JSON","stringify","saveCurrent","async","e","console","error","saveJSONPart","parsed","parse","addLegacy","question","options","answer","updLegacy","i","field","v","next","split","map","s","trim","delLegacy","filter","_","idx","_jsxs","Dialog","maxWidth","fullWidth","children","_jsx","DialogTitle","DialogContent","dividers","Grid","container","spacing","sx","mb","item","xs","TextField","label","value","onChange","target","join","IconButton","onClick","color","DeleteIcon","Button","Divider","my","variant","multiline","rows","fontFamily","Box","mt","DialogActions","Snackbar","autoHideDuration","message","ensure","updReading","f","arr","_objectSpread","updWriting","updReorder","updExt","Typography","r","zh","ko","delReading","concat","addReading","w","prompt_ko","answer_zh","delWriting","addWriting","items","hint_ko","delReorder","addReorder","ev","py","pron","delExt","addExt"],"sourceRoot":""}