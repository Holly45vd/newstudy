{"version":3,"file":"static/js/17.e26f5c1d.chunk.js","mappings":"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","sources":["components/admin/SubstitutionModal.jsx"],"sourcesContent":["// src/components/admin/SubstitutionModal.jsx\nimport React, { useEffect, useState } from \"react\";\nimport {\n  Dialog, DialogTitle, DialogContent, DialogActions, Button,\n  Box, Grid, TextField,  IconButton, Divider, Snackbar,\n} from \"@mui/material\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { useUnitEdit } from \"../../pages/admin/UnitEditProvider\";\n\nconst norm = (sp) => {\n  if (!sp)\n    return {\n      title: \"\",\n      pattern: \"\",\n      slots: [],\n      items: {},\n      pron_pattern: \"\",\n      pron_dict: [],\n      meaning_pattern: \"\",\n      meaning_dict: [],\n      meaning: \"\"\n    };\n  const items = {};\n  if (sp.items && typeof sp.items === \"object\") {\n    Object.keys(sp.items).forEach((k) => {\n      items[k] = (sp.items[k] || []).map((it) => ({\n        hanzi: it.hanzi || \"\",\n        pinyin: it.pinyin || \"\",\n        pron: it.pron || it.pronunciation || \"\",\n        meaning: it.meaning || it.ko || \"\",\n      }));\n    });\n  }\n  return {\n    title: sp.title || \"\",\n    pattern: sp.pattern || \"\",\n    slots: Array.isArray(sp.slots) ? sp.slots : [],\n    items,\n    pron_pattern: sp.pron_pattern || \"\",\n    pron_dict: Array.isArray(sp.pron_dict) ? sp.pron_dict : [],\n    meaning_pattern: sp.meaning_pattern || \"\",\n    meaning_dict: Array.isArray(sp.meaning_dict) ? sp.meaning_dict : [],\n    meaning: sp.meaning || sp.meaning_ko || sp.ko || sp.translation || \"\",\n  };\n};\n\nexport default function SubstitutionModal({ open, onClose }) {\n  const { practice, setPractice, savePartFromState, savePartWithJSON, buildPartFromState } = useUnitEdit();\n  const p = practice && !Array.isArray(practice) ? practice : { substitution: [] };\n  const [jsonStr, setJsonStr] = useState(\"[]\");\n  const [snack, setSnack] = useState(\"\");\n\n  useEffect(() => {\n    if (open) {\n      setJsonStr(JSON.stringify(buildPartFromState(\"practice.substitution\"), null, 2));\n    }\n  }, [open, buildPartFromState]);\n\n  const basePrev = (prev) =>\n    (prev && !Array.isArray(prev) ? prev : { reading: [], writing: [], reorder: [], extension_phrases: [], substitution: [] });\n\n  const addPattern = () =>\n    setPractice((prev) => ({\n      ...basePrev(prev),\n      substitution: [\n        ...(p.substitution || []),\n        { title: \"\", pattern: \"\", slots: [], items: {}, pron_pattern: \"\", pron_dict: [], meaning_pattern: \"\", meaning_dict: [], meaning: \"\" }\n      ]\n    }));\n\n  const updField = (si, field, val) =>\n    setPractice((prev) => {\n      const arr = [...(p.substitution || [])];\n      const sp = norm(arr[si]);\n      arr[si] = { ...sp, [field]: val };\n      return { ...basePrev(prev), substitution: arr };\n    });\n\n  const addSlot = (si) =>\n    setPractice((prev) => {\n      const arr = [...(p.substitution || [])];\n      const sp = norm(arr[si]);\n      const k = `slot${(sp.slots?.length || 0) + 1}`;\n      sp.slots = [...(sp.slots || []), k];\n      sp.items = { ...(sp.items || {}), [k]: [] };\n      arr[si] = sp;\n      return { ...basePrev(prev), substitution: arr };\n    });\n\n  const renameSlot = (si, oldKey, newKey) =>\n    setPractice((prev) => {\n      const arr = [...(p.substitution || [])];\n      const sp = norm(arr[si]);\n      const slots = sp.slots.map((s) => (s === oldKey ? newKey : s));\n      const items = { ...sp.items };\n      if (items[oldKey]) {\n        items[newKey] = items[oldKey];\n        delete items[oldKey];\n      }\n      arr[si] = { ...sp, slots, items };\n      return { ...basePrev(prev), substitution: arr };\n    });\n\n  const delSlot = (si, key) =>\n    setPractice((prev) => {\n      const arr = [...(p.substitution || [])];\n      const sp = norm(arr[si]);\n      sp.slots = (sp.slots || []).filter((s) => s !== key);\n      const items = { ...(sp.items || {}) };\n      delete items[key];\n      arr[si] = { ...sp, items };\n      return { ...basePrev(prev), substitution: arr };\n    });\n\n  const addItem = (si, key) =>\n    setPractice((prev) => {\n      const arr = [...(p.substitution || [])];\n      const sp = norm(arr[si]);\n      sp.items[key] = [...(sp.items[key] || []), { hanzi: \"\", pinyin: \"\", pron: \"\", meaning: \"\" }];\n      arr[si] = sp;\n      return { ...basePrev(prev), substitution: arr };\n    });\n\n  const updItem = (si, key, ii, field, val) =>\n    setPractice((prev) => {\n      const arr = [...(p.substitution || [])];\n      const sp = norm(arr[si]);\n      const list = [...(sp.items[key] || [])];\n      list[ii] = { ...list[ii], [field]: val };\n      sp.items[key] = list;\n      arr[si] = sp;\n      return { ...basePrev(prev), substitution: arr };\n    });\n\n  const delItem = (si, key, ii) =>\n    setPractice((prev) => {\n      const arr = [...(p.substitution || [])];\n      const sp = norm(arr[si]);\n      sp.items[key] = (sp.items[key] || []).filter((_, idx) => idx !== ii);\n      arr[si] = sp;\n      return { ...basePrev(prev), substitution: arr };\n    });\n\n  const delPattern = (si) =>\n    setPractice((prev) => ({ ...basePrev(prev), substitution: (p.substitution || []).filter((_, idx) => idx !== si) }));\n\n  const saveCurrent = async () => {\n    try {\n      await savePartFromState(\"practice.substitution\");\n      setSnack(\"교체연습 저장 완료\");\n    } catch (e) {\n      console.error(e);\n      setSnack(\"교체연습 저장 실패\");\n    }\n  };\n\n  const saveJSONPart = async () => {\n    try {\n      const parsed = JSON.parse(jsonStr);\n      await savePartWithJSON(\"practice.substitution\", parsed);\n      setPractice((prev) => ({ ...basePrev(prev), substitution: parsed }));\n      setSnack(\"교체연습(JSON) 저장 완료\");\n    } catch (e) {\n      console.error(e);\n      setSnack(\"JSON 파싱/저장 실패\");\n    }\n  };\n\n  return (\n    <Dialog open={open} onClose={onClose} maxWidth=\"lg\" fullWidth>\n      <DialogTitle>교체연습 (다중 슬롯)</DialogTitle>\n      <DialogContent dividers>\n        {(p.substitution || []).map((s, si) => {\n          const sp = norm(s);\n          return (\n            <Box key={`sub-${si}`} sx={{ mb: 2, border: \"1px solid #eee\", p: 2, borderRadius: 1 }}>\n              <TextField\n                label=\"title\"\n                value={sp.title || \"\"}\n                onChange={(e) => updField(si, \"title\", e.target.value)}\n                fullWidth\n                sx={{ mb: 1 }}\n              />\n              <TextField\n                label=\"pattern\"\n                value={sp.pattern || \"\"}\n                onChange={(e) => updField(si, \"pattern\", e.target.value)}\n                fullWidth\n                sx={{ mb: 2 }}\n              />\n              <TextField\n                label=\"meaning (패턴 한국어: 예) 너 {object} 있어?\"\n                value={sp.meaning || \"\"}\n                onChange={(e) => updField(si, \"meaning\", e.target.value)}\n                fullWidth\n                sx={{ mb: 2 }}\n              />\n\n              {(sp.slots || []).map((slotKey) => (\n                <Box key={slotKey} sx={{ border: \"1px dashed #bbb\", p: 1.5, mb: 2, borderRadius: 1 }}>\n                  <Grid container spacing={1} alignItems=\"center\">\n                    <Grid item xs={8}>\n                      <TextField\n                        label=\"슬롯 이름\"\n                        fullWidth\n                        value={slotKey}\n                        onChange={(e) => renameSlot(si, slotKey, e.target.value)}\n                      />\n                    </Grid>\n                    <Grid item xs={4} textAlign=\"right\">\n                      <Button color=\"error\" onClick={() => delSlot(si, slotKey)}>슬롯 삭제</Button>\n                    </Grid>\n                  </Grid>\n\n                  {(sp.items?.[slotKey] || []).map((it, ii) => (\n                    <Grid container spacing={1} key={`itm-${si}-${slotKey}-${ii}`} sx={{ mt: 1 }}>\n                      <Grid item xs={3}>\n                        <TextField label=\"한자\" value={it.hanzi || \"\"} onChange={(e) => updItem(si, slotKey, ii, \"hanzi\", e.target.value)} fullWidth />\n                      </Grid>\n                      <Grid item xs={3}>\n                        <TextField label=\"병음\" value={it.pinyin || \"\"} onChange={(e) => updItem(si, slotKey, ii, \"pinyin\", e.target.value)} fullWidth />\n                      </Grid>\n                      <Grid item xs={3}>\n                        <TextField label=\"발음\" value={it.pron || \"\"} onChange={(e) => updItem(si, slotKey, ii, \"pron\", e.target.value)} fullWidth />\n                      </Grid>\n                      <Grid item xs={3}>\n                        <TextField label=\"뜻\" value={it.meaning || \"\"} onChange={(e) => updItem(si, slotKey, ii, \"meaning\", e.target.value)} fullWidth />\n                      </Grid>\n                      <Grid item xs={12}>\n                        <IconButton onClick={() => delItem(si, slotKey, ii)} color=\"error\">\n                          <DeleteIcon />\n                        </IconButton>\n                      </Grid>\n                    </Grid>\n                  ))}\n                  <Button size=\"small\" onClick={() => addItem(si, slotKey)}>+ 교체어 추가</Button>\n                </Box>\n              ))}\n              <Button size=\"small\" onClick={() => addSlot(si)}>+ 슬롯 추가</Button>\n              <IconButton onClick={() => delPattern(si)} color=\"error\" sx={{ ml: 1 }}>\n                <DeleteIcon />\n              </IconButton>\n            </Box>\n          );\n        })}\n        <Button onClick={addPattern}>+ 교체연습 추가</Button>\n\n        <Divider sx={{ my: 2 }} />\n        <Button variant=\"contained\" onClick={saveCurrent}>현재 값으로 저장</Button>\n\n        <Divider sx={{ my: 2 }} />\n        <TextField\n          label=\"이 파트 JSON 편집 (practice.substitution)\"\n          value={jsonStr}\n          onChange={(e) => setJsonStr(e.target.value)}\n          fullWidth\n          multiline\n          rows={12}\n          sx={{ fontFamily: \"monospace\" }}\n        />\n        <Box sx={{ mt: 1 }}>\n          <Button variant=\"contained\" onClick={saveJSONPart}>JSON으로 저장</Button>\n        </Box>\n      </DialogContent>\n      <DialogActions><Button onClick={onClose}>닫기</Button></DialogActions>\n      <Snackbar open={!!snack} autoHideDuration={2200} onClose={() => setSnack(\"\")} message={snack} />\n    </Dialog>\n  );\n}\n"],"names":["norm","sp","title","pattern","slots","items","pron_pattern","pron_dict","meaning_pattern","meaning_dict","meaning","Object","keys","forEach","k","map","it","hanzi","pinyin","pron","pronunciation","ko","Array","isArray","meaning_ko","translation","SubstitutionModal","_ref","open","onClose","practice","setPractice","savePartFromState","savePartWithJSON","buildPartFromState","useUnitEdit","p","substitution","jsonStr","setJsonStr","useState","snack","setSnack","useEffect","JSON","stringify","basePrev","prev","reading","writing","reorder","extension_phrases","updField","si","field","val","arr","_objectSpread","updItem","key","ii","list","_jsxs","Dialog","maxWidth","fullWidth","children","_jsx","DialogTitle","DialogContent","dividers","s","Box","sx","mb","border","borderRadius","TextField","label","value","onChange","e","target","slotKey","_sp$items","Grid","container","spacing","alignItems","item","xs","renameSlot","oldKey","newKey","textAlign","Button","color","onClick","delSlot","filter","mt","IconButton","delItem","_","idx","DeleteIcon","concat","size","addItem","_sp$slots","length","addSlot","delPattern","ml","addPattern","Divider","my","variant","async","console","error","multiline","rows","fontFamily","parsed","parse","DialogActions","Snackbar","autoHideDuration","message"],"sourceRoot":""}